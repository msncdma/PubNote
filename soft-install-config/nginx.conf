
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


	##cache##
	proxy_connect_timeout 5;
	proxy_read_timeout 60;
	proxy_send_timeout 5;
	proxy_buffer_size 16k;
	proxy_buffers 4 64k;
	proxy_busy_buffers_size 128k;
	proxy_temp_file_write_size 128k;
	proxy_temp_path	temp/proxy_temp;
	proxy_cache_path  temp/proxy_cache levels=1:2 keys_zone=cache_one:16m inactive=1d max_size=30g;
	##end##

#	upstream local {
#		server 192.168.2.117:8892	weight=10;
#	}

    server {
        listen       8894;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
	location ~ ^/fileserver/MultiUploadServlet.* {
                proxy_pass http://localhost:8892;
                        client_max_body_size 100m;
                        proxy_read_timeout 100;
                        proxy_send_timeout 100;
        }

        location ~ ^/fileserver/UploadServlet.* {
          	proxy_pass http://localhost:8892;
			client_max_body_size 100m;
			proxy_read_timeout 100;
			proxy_send_timeout 100;
        }
	location ~ ^/fileserver/images.* {
          	proxy_pass http://localhost:8892;
			client_max_body_size 100m;
			proxy_read_timeout 100;
			proxy_send_timeout 100;
        }
	location ~ ^/fileserver/Common.* {
                proxy_pass http://localhost:8892;
                        client_max_body_size 100m;
                        proxy_read_timeout 100;
                        proxy_send_timeout 100;
        }

	#DOWNLOAD STATIC CONFIG
	location ~* \.(gif|jpg|jpeg|png|css|js|html|ico)$ {
                        root /data/res/;
                }
	location ~ ^/fileserver/DownloadServlet/mcdownload1/.* {
		#root  D:\configpath\first;
		root /data/anlong/first;

		proxy_read_timeout 100;
		proxy_send_timeout 100;
		proxy_cache cache_one;
		proxy_cache_valid 200 302 12h;
		proxy_cache_valid 301 1d;
		proxy_cache_valid any 1m;
		expires 30d;
        }
	location ~ ^/fileserver/DownloadServlet/mcdownload2/.* {
		#root  D:\configpath\second;
		root /data/anlong/second;

		proxy_read_timeout 100;
		proxy_send_timeout 100;
		proxy_cache cache_one;
		proxy_cache_valid 200 302 12h;
		proxy_cache_valid 301 1d;
		proxy_cache_valid any 1m;
		expires 30d;
        }
	location ~ ^/fileserver/DownloadServlet/mcdownload3/.* {
	   # root  D:\configpath\third;
		root /data/anlong/third;

	    proxy_read_timeout 100;
	    proxy_send_timeout 100;
		proxy_cache cache_one;
		proxy_cache_valid 200 302 12h;
		proxy_cache_valid 301 1d;
		proxy_cache_valid any 1m;
		expires 30d;
        }
	location ~ ^/fileserver/DownloadServlet.* {
	    proxy_pass http://localhost:8892;
		}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
